Prompt_ID,Prompt,LLM_Response,Instruction,Evidence,Model,Time-Stamp
b64b0573-6aff-4ac5-afc8-dbb812c4a900,what is Varro's technical stack?,"Varro's technical stack includes Python and Flask for the backend, OpenAI API and Semantic Scholars API for data retrieval, React and Axios for frontend HTTP requests, and Material-UI for design. Data processing is done using Python for the Flesch-Kincaid Grade Level Formula and Valence Aware Dictionary and Sentiment Reasoner.",default_with_context," It provides a summary  of each article, along with easily interpreted statistics to evaluate bias, the extent of  academic support, and readability. Users are no longer subject to the rampant  misinformation and heavily biased language that plagues general search engines, or the  heavily technical, underutilized research databases. Varro makes finding credible  information easily accessible to the general public.
 Varro: an AI search engine that provides users with only research-backed information  written by experts, all presented in an easily digestible format. It offers summaries and  stats for bias, academic backing, and readability, thus combating misinformation and  making credible info accessible. Technical Proposal We propose to build a website where users can paste long-form text from research  papers into the website.
Varro is a search engine that provides users with only research-backed information  written by experts, all presented in a user-friendly and easily digestible format. By  leveraging AI to translate complicated text into concise prompts, we can provide users  with only the most relevant articles from a comprehensive research database, such as  Semantic Scholar. Varro offers users access to relevant, research-grade articles  presented in a clear, concise, and easily understandable manner.
Very important to clearly design and communicate how this is calculated to  users Contextual Information  **for each related article Title (Semantic Scholars API) Authors (Semantic Scholars API) Journal (Semantic Scholars API) Num. of citations (Semantic Scholars API) Num. of references (Semantic Scholars API) Readability Difficulty Score (Flesch-Kincaid Grade Level formula) Sentiment Analysis (VADER: Valence Aware Dictionary and sEntiment Reasoner) https://ojs.aaai.org/index.php/ICWSM/article/view/14550 https://www.scimagojr.com/journalrank.php?type=j (H-Index ranking) Tech Stack: Backend Python + Flask + OpenAI API + Semantic Scholars API Frontend React + Axios (HTTP requests from React to Flask server) + Material-UI (design) Data Processing Python (Flesch-Kincaid Grade Level Formula, Valence Aware Dictionary and  sEntiment Reasoner)Final Tech Spec
",gpt-3.5-turbo-instruct,Mon Dec 18 18:11:47 2023
